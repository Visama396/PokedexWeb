---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="twitter:card" content="summary_large_large" />
		<meta name="twitter:site" content="@visama396" />
		<meta name="view-transition" content="same-origin" />
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	html {
		font-family: system-ui, sans-serif;
		background: #111;
	}
</style>

<script>
const checkIsNavigationSupported = () => {
	return Boolean(document.startViewTransition)
}

const fetchPage = async(url) => {
	const response = await fetch(url).then(response => response.text())
	const [, data] = response.match(/<body[^>]*>([\s\S]*)<\/body>/i)
	return data
}

if (checkIsNavigationSupported()) {
	window.navigation.addEventListener('navigate', (event) => {
		const toUrl = new URL(event.destination.url)
		if (location.origin !== toUrl.origin) return
		
		event.intercept({
			async handler() {
				const data = await fetchPage(toUrl.pathname)
				document.startViewTransition(() => {
					document.body.innerHTML = data
					document.documentElement.scrollTop = 0
				})
			}
		})
	})
}
</script>
