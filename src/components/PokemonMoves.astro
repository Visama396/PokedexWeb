---
import MoveItem from "./MoveItem.astro"

const { moves, caption, generation, method } = Astro.props

let shownMoves = []

for (let move of moves) {
  for (let details of move.version_group_details) {
    if (details.version_group.name == generation && details.move_learn_method.name == method) {
      shownMoves.push({level: details.level_learned_at, url: move.move.url})
    }
  }
}

shownMoves.sort((a, b) => {return a.level - b.level})
---
<section class="flex flex-col flex-1">
  <h2 class="font-semibold text-xl text-zinc-200/80">{caption}</h2>
  <div class="relative overflow-x-auto">
    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
      <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
        <tr>
          {method == 'level-up' ? (<th scope="col" class="px-2 py-1">
            Lv.
          </th>): ""}
          <th scope="col" class="px-2 py-1">
            Move
          </th>
          <th scope="col" class="px-2 py-1">
            Type
          </th>
          <th scope="col" class="px-2 py-1">
            Cat.
          </th>
          <th scope="col" class="px-2 py-1">
            Power
          </th>
          <th scope="col" class="px-2 py-1">
            Acc.
          </th>
        </tr>
      </thead>
      <tbody>
        {
          shownMoves.map(move => (
            <MoveItem level={move.level} move={move.url} method={method} />
          ))
        }
      </tbody>
    </table>
  </div>
</section>